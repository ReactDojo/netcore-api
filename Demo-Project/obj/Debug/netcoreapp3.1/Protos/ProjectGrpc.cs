// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/project.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DemoProject.Web.Protobufs.V1 {
  public static partial class Projector
  {
    static readonly string __ServiceName = "v1.Projector";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.EmptyRequest> __Marshaller_v1_EmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.EmptyRequest.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.ProjectsReply> __Marshaller_v1_ProjectsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.ProjectsReply.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.ProjectReply> __Marshaller_v1_ProjectReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.ProjectReply.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest> __Marshaller_v1_ProjectSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest> __Marshaller_v1_ProjectCreateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.ProjectRequest> __Marshaller_v1_ProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.ProjectRequest.Parser));
    static readonly grpc::Marshaller<global::DemoProject.Web.Protobufs.V1.EmptyReply> __Marshaller_v1_EmptyReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DemoProject.Web.Protobufs.V1.EmptyReply.Parser));

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectsReply> __Method_GetAll = new grpc::Method<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_v1_EmptyRequest,
        __Marshaller_v1_ProjectsReply);

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply> __Method_GetAllStreamed = new grpc::Method<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllStreamed",
        __Marshaller_v1_EmptyRequest,
        __Marshaller_v1_ProjectReply);

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply> __Method_GetById = new grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_v1_ProjectSearchRequest,
        __Marshaller_v1_ProjectReply);

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply> __Method_Create = new grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_v1_ProjectCreateRequest,
        __Marshaller_v1_ProjectReply);

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply> __Method_Update = new grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_v1_ProjectRequest,
        __Marshaller_v1_ProjectReply);

    static readonly grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.EmptyReply> __Method_Delete = new grpc::Method<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.EmptyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_v1_ProjectSearchRequest,
        __Marshaller_v1_EmptyReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DemoProject.Web.Protobufs.V1.ProjectReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Projector</summary>
    [grpc::BindServiceMethod(typeof(Projector), "BindService")]
    public abstract partial class ProjectorBase
    {
      public virtual global::System.Threading.Tasks.Task<global::DemoProject.Web.Protobufs.V1.ProjectsReply> GetAll(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAllStreamed(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::IServerStreamWriter<global::DemoProject.Web.Protobufs.V1.ProjectReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DemoProject.Web.Protobufs.V1.ProjectReply> GetById(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DemoProject.Web.Protobufs.V1.ProjectReply> Create(global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DemoProject.Web.Protobufs.V1.ProjectReply> Update(global::DemoProject.Web.Protobufs.V1.ProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DemoProject.Web.Protobufs.V1.EmptyReply> Delete(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Projector</summary>
    public partial class ProjectorClient : grpc::ClientBase<ProjectorClient>
    {
      /// <summary>Creates a new client for Projector</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProjectorClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Projector that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProjectorClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProjectorClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProjectorClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::DemoProject.Web.Protobufs.V1.ProjectsReply GetAll(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectsReply GetAll(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectsReply> GetAllAsync(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectsReply> GetAllAsync(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> GetAllStreamed(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllStreamed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> GetAllStreamed(global::DemoProject.Web.Protobufs.V1.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetAllStreamed, null, options, request);
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply GetById(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply GetById(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> GetByIdAsync(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> GetByIdAsync(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply Create(global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply Create(global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> CreateAsync(global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> CreateAsync(global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply Update(global::DemoProject.Web.Protobufs.V1.ProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DemoProject.Web.Protobufs.V1.ProjectReply Update(global::DemoProject.Web.Protobufs.V1.ProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> UpdateAsync(global::DemoProject.Web.Protobufs.V1.ProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.ProjectReply> UpdateAsync(global::DemoProject.Web.Protobufs.V1.ProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::DemoProject.Web.Protobufs.V1.EmptyReply Delete(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DemoProject.Web.Protobufs.V1.EmptyReply Delete(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.EmptyReply> DeleteAsync(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DemoProject.Web.Protobufs.V1.EmptyReply> DeleteAsync(global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProjectorClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProjectorClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProjectorBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_GetAllStreamed, serviceImpl.GetAllStreamed)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProjectorBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectsReply>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_GetAllStreamed, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::DemoProject.Web.Protobufs.V1.EmptyRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(serviceImpl.GetAllStreamed));
      serviceBinder.AddMethod(__Method_GetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(serviceImpl.GetById));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DemoProject.Web.Protobufs.V1.ProjectCreateRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DemoProject.Web.Protobufs.V1.ProjectRequest, global::DemoProject.Web.Protobufs.V1.ProjectReply>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DemoProject.Web.Protobufs.V1.ProjectSearchRequest, global::DemoProject.Web.Protobufs.V1.EmptyReply>(serviceImpl.Delete));
    }

  }
}
#endregion
